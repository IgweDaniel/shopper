definitions:
  dto.CreateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  dto.CreateProductResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  dto.GetOrderResponse:
    properties:
      id:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
      status:
        type: string
    type: object
  dto.GetProductResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  dto.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginUserResponse:
    properties:
      token:
        type: string
    type: object
  dto.RegisterUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterUserResponse:
    properties:
      email:
        type: string
      id:
        type: string
    type: object
  dto.UpdateOrderRequest:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  dto.UpdateOrderResponse:
    properties:
      id:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
      status:
        type: string
    type: object
  dto.UpdateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - description
    - name
    - price
    type: object
  dto.UpdateProductResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  helpers.ApiResponse:
    properties:
      data:
        description: The data returned by the API
      message:
        description: A message providing additional information about the response
        type: string
      success:
        description: Indicates whether the request was successful
        type: boolean
    type: object
info:
  contact: {}
paths:
  /orders:
    get:
      description: Get a list of all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetOrderResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Get all orders
      tags:
      - orders
  /orders/{id}:
    delete:
      description: Delete an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Delete an order
      tags:
      - orders
    get:
      description: Get details of an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Get an order by ID
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update an order's details
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: Order update request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateOrderResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Update an order
      tags:
      - orders
  /products:
    get:
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GetProductResponse'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with name, description, and price
      parameters:
      - description: Product creation request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateProductResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Delete a product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product's name, description, and price
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product update request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateProductResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Update a product
      tags:
      - products
  /user:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User registration request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.RegisterUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Register a new user
      tags:
      - users
  /user/auth:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: User login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
                message:
                  type: string
                success:
                  type: boolean
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                message:
                  type: string
                success:
                  type: boolean
              type: object
      summary: Login a user
      tags:
      - users
swagger: "2.0"
